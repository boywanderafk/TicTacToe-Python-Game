def print_board(board):
    for row in board:
        print(" | ".join(row))
        print("-" * 9)

def check_winner(board, mark):
    # Check rows, columns, and diagonals for a win
    for i in range(3):
        if all(board[i][j] == mark for j in range(3)):
            return True
        if all(board[j][i] == mark for j in range(3)):
            return True
    if all(board[i][i] == mark for i in range(3)) or all(board[i][2-i] == mark for i in range(3)):
        return True
    return False

def is_full(board):
    # Check if the board is full
    for row in board:
        for cell in row:
            if cell == " ":
                return False
    return True

def play_game():
    # Initialize an empty board
    board = [[" " for _ in range(3)] for _ in range(3)]
    current_player = "X"

    print("Welcome to Tic Tac Toe!")
    print_board(board)

    while True:
        # Get the current player's move
        row = int(input(f"Player {current_player}, enter row (1-3): ")) - 1
        col = int(input(f"Player {current_player}, enter column (1-3): ")) - 1

        # Check if the chosen cell is empty
        if board[row][col] != " ":
            print("That cell is already taken! Try again.")
            continue

        # Place the current player's mark on the board
        board[row][col] = current_player
        print_board(board)

        # Check if the current player wins
        if check_winner(board, current_player):
            print(f"Player {current_player} wins!")
            break

        # Check if the board is full (game ends in a draw)
        if is_full(board):
            print("It's a draw!")
            break

        # Switch players
        current_player = "O" if current_player == "X" else "X"

# Start the game
play_game()

